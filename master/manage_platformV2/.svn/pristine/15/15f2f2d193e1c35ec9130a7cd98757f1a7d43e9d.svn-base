package com.jy.process.impl.system.request;

import com.jy.entity.system.finance.reconciliation.jobTask.JobTaskStatistics;
import com.jy.process.system.request.NewTicketInfoProcess;
import com.jy.service.system.finance.reconciliation.lottery.NewTicketService;
import com.jy.service.system.finance.statistics.jobTask.JobTaskStatisticsService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * Created by lijunke on 2017/6/2.
 */
@Service("newTicketInfoProcess")
public class NewTicketInfoProcessImpl extends ApiRequestTxtProcessImpl implements NewTicketInfoProcess {


    protected static final Logger log = LoggerFactory.getLogger(UserInfoRequestProcessImpl.class);

    @Value("${newTicket.name}")
    private String ftpFileName;         //下载文件的名称

    @Autowired
    private NewTicketService newTicketService;

    @Autowired
    private JobTaskStatisticsService jobTaskStatisticsService;


    @Override
    public void synchronizeNewTicketData(String date) throws Exception {
        super.ftpCommonsFunction(ftpFileName, date);
    }

    @Override
    public String byJobName() {
        return "出票信息";
    }

    @Override
    public void saveJobLog(JobTaskStatistics jobTaskStatistics) {
        try {
            this.jobTaskStatisticsService.insertJobTaskStatistics(jobTaskStatistics);
        } catch (Exception e) {
            log.error("出票同步数据接口保存LOG数据异常！");
            e.printStackTrace();
        }
    }

    @Override
    public int saveFTPData(String filePath, String date) {
        try {
            return newTicketService.save(filePath, date);
        } catch (Exception e) {
            log.error("出票同步数据接口保存数据异常！");
            e.printStackTrace();
        }
        return 0;
    }
}
