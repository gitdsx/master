package com.jy.task.job.cpSytem;


import com.jy.common.utils.DateUtils;
import com.jy.common.utils.SpringWebContextUtil;
import com.jy.entity.task.base.ScheduleJob;
import com.jy.service.system.finance.reconciliation.lottery.PlatformFundsService;
import com.jy.common.utils.task.ScheduleUtils;
import com.jy.service.impl.task.util.TaskLogUtil;
import com.jy.service.system.finance.reconciliation.lottery.TranceFundsService;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.ApplicationContext;

/**
 * Created by Administrator on 2017/3/2.
 */
public class PlatFormFundsTask implements Job{

    /* 日志对象 */
    private static final Logger log = LoggerFactory.getLogger(InsertSmReport.class);
    public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {
        ScheduleJob scheduleJob = (ScheduleJob) jobExecutionContext.getMergedJobDataMap().get(ScheduleUtils.JOB_PARAM_KEY);
        String jobName = scheduleJob.getJobName();
        String jobGroup = scheduleJob.getJobGroup();
        String jobClass = scheduleJob.getJobClass();
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+"  任务[" + jobName + "]开始运行");
        try {
            //平台资金报表对账统计
            platFormFundsTask();
            // 保存日志
            TaskLogUtil.saveTaskLog(jobGroup + ":" + jobName, jobClass, TaskLogUtil.NORMAL, "测试任务正常运行");
        } catch (Exception e) {
            log.error(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+"  任务[" + jobName + "]异常", e);
            // 保存异常日志
            TaskLogUtil.saveTaskLog(jobGroup + ":" + jobName, jobClass, TaskLogUtil.EXCEPTION, e.toString());
        }
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+"  任务[" + jobName + "]成功运行结束");

    }

    /**
     * 平台资金报表对账统计
     */
    private void platFormFundsTask() {
        //平台资金每日总报表数据
        platFormFundsInsert();
        //平台资金第三方对账明细报表数据
        platFormFundsDetailInsert();
        //追期资金
        tranceFundsInsert();
    }

    private void platFormFundsInsert() {
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——平台资金每日总报表数据任务开始运行");
        ApplicationContext ac = SpringWebContextUtil.getApplicationContext();
        PlatformFundsService service  = (PlatformFundsService) ac.getBean("PlatformFundsService");
        String date=DateUtils.getAfterDayDate("-1").substring(0,10);
        service.execPlatFormFundsTask("auto",date);
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——平台资金每日总报表数据任务end");
    }

    private void platFormFundsDetailInsert() {
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——平台资金进出与第三方流水数据任务开始运行");
        ApplicationContext ac = SpringWebContextUtil.getApplicationContext();
        PlatformFundsService service  = (PlatformFundsService) ac.getBean("PlatformFundsService");
        String date=DateUtils.getAfterDayDate("-1").substring(0,10);
        service.execThirdpayTask("auto",date);
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——平台资金进出与第三方流水数据任务end");
    }
    private void tranceFundsInsert() {
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——追期资金开始运行");
        ApplicationContext ac = SpringWebContextUtil.getApplicationContext();
        TranceFundsService service  = (TranceFundsService) ac.getBean("TranceFundsService");
        String date=DateUtils.getAfterDayDate("-1").substring(0,10);
        service.execTask("auto",date);
        String month=DateUtils.getAfterDayDate("-1").substring(0,7);
        service.generateReport(month);
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss")+" ——追期资金end");
    }


}
