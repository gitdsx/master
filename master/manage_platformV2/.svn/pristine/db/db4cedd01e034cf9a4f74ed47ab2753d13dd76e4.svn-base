package com.jy.task.job.request;

import com.jy.common.utils.DateUtils;
import com.jy.common.utils.SpringWebContextUtil;
import com.jy.from.system.request.RequestParamInfoForm;
import com.jy.process.impl.system.request.UserBalanceRequestProcessImpl;
import org.springframework.context.ApplicationContext;

import java.util.Calendar;

/**
 * Created by shixi on 2017/4/28.
 */
public class UserBalanceTask extends BaseTask
{
    private final static int pageSige=6000;
    public void saveData()
    {
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss") + " 同步用户余额数据开始运行");
        ApplicationContext ac = SpringWebContextUtil.getApplicationContext();
        UserBalanceRequestProcessImpl process = (UserBalanceRequestProcessImpl) ac.getBean("userBalanceRequestProcess");
        //分页数据
        RequestParamInfoForm req = new RequestParamInfoForm();
        req.setPage("true");//是否开启分页，默认开启
        req.setQueryAll(super.getParam()[0]);//是否查询全部，默认按照天数查询
        req.setCurrentPage(1);//默认为第一页
        req.setQueryTime(super.getParam()[2].equals("default")?DateUtils.getDate("yyyyMMdd"):super.getParam()[2]);//默认当天
        req.setPageSize(pageSige);//默认6000
        try
        {
            if("true".equals(req.getQueryAll())){
                Calendar calendar = Calendar.getInstance();
                int month = calendar.get(Calendar.MONTH) + 1;
                for (int i = 5; i <= month; i++) {
                    calendar.set(Calendar.YEAR, calendar.get(Calendar.YEAR));
                    calendar.set(Calendar.MONTH, i - 1);
                    int days = calendar.getActualMaximum(Calendar.DATE);
                    if (i == month) {
                        days = calendar.get(Calendar.DATE);
                    }
                    for (int j = 1; j <= days; j++) {
                        StringBuffer stringBuffer = new StringBuffer();
                        stringBuffer.append(2017).append(i < 10 ? "0" + i + "" : i).append(j < 10 ? "0" + j + "" : j);
                        req.setQueryTime(stringBuffer.toString());
                        process.synchronizationUserBalanceData(req);
                    }
                }
            }else{
                process.synchronizationUserBalanceData(req);
            }
        } catch (Exception e)
        {
            e.printStackTrace();
        }
        log.info(DateUtils.getDate("yyyy-MM-dd HH:mm:ss") + "  同步用户余额数据结束");
    }
}
